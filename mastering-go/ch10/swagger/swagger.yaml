basePath: /
consumes:
    - application/json
definitions:
    User:
        description: User defines the structure for a Full User Record
        x-go-package: swagger
info:
    description: |-
        Documentation for REST API

        Schemes: httpswagger
    title: for the RESTful Server
    version: 1.0.7
paths:
    /:
        post:
            description: Works with all HTTP methods
            operationId: noContent
            responses:
                "200":
                    $ref: '#/responses/noContent'
                "404":
                    $ref: '#/responses/ErrorMessage'
            summary: Default Handler for everything that is not a match.
            tags:
                - DefaultHandler
    /add:
        post:
            description: Create a new User
            operationId: createUser
            responses:
                "200":
                    $ref: '#/responses/OK'
                "400":
                    $ref: '#/responses/BadRequest'
            tags:
                - UserInput
    /delete/{id}:
        delete:
            description: The command should be issued by an admin user
            operationId: deleteID
            parameters:
                - description: The user id to be deleted
                  format: int64
                  in: path
                  name: id
                  required: true
                  type: integer
                  x-go-name: ID
            responses:
                "200":
                    $ref: '#/responses/noContent'
                "404":
                    $ref: '#/responses/ErrorMessage'
            summary: Delete a user given their ID.
            tags:
                - DeleteUser
    /getid:
        get:
            description: Returns the ID of a User given their username and password
            operationId: loggedInfo
            parameters:
                - description: A list of users
                  in: body
                  name: Body
                  schema: {}
            responses:
                "200":
                    $ref: '#/responses/OK'
                "400":
                    $ref: '#/responses/BadRequest'
            tags:
                - getUserId
    /logged:
        get:
            description: Returns a list of logged in users
            operationId: getUserInfo
            parameters:
                - description: A list of users
                  in: body
                  name: Body
                  schema: {}
            responses:
                "200":
                    $ref: '#/responses/UsersResponse'
                "400":
                    $ref: '#/responses/BadRequest'
            tags:
                - logged
    /login:
        post:
            description: Login an existing user
            operationId: getLoginInfo
            responses:
                "200":
                    $ref: '#/responses/OK'
                "400":
                    $ref: '#/responses/BadRequest'
            tags:
                - user
    /time:
        get:
            description: Return current time
            operationId: getTime
            responses:
                "200":
                    $ref: '#/responses/OK'
produces:
    - application/json
responses:
    BadRequest:
        description: Generic BadRequest message returned as an HTTP Status Code
    ErrorMessage:
        description: Generic error message returned as an HTTP Status Code
    OK:
        description: Generic OK message returned as an HTTP Status Code
    UsersResponse:
        description: A list of Users
        schema:
            items: {}
            type: array
    noContent:
        description: Generic noContent message returned as an HTTP Status Code
swagger: "2.0"
